---
import STACK, {
  TechName,
  Stage,
  TECH_ATTRIBUTES as TECH_ATTR,
} from "@data/tech-stack";
import { Sprite } from "astro-iconify";

interface Props {
  name: TechName;
}

const STAGES = {
  researching: TECH_ATTR.researching.emoji,
  exploring: TECH_ATTR.exploring.emoji,
  learning: TECH_ATTR.learning.emoji,
  confident: TECH_ATTR.confident.emoji,
  expert: TECH_ATTR.expert.emoji,
} as Record<Stage, string>;

const { name } = Astro.props;

const tech = STACK[name];

const { icon, stage, isInterested, isWork, isFresh } = tech;

const iconName = typeof icon === "string" ? icon : icon.name;

const iconColor = typeof icon === "object" && icon.color;

const icons = [
  STAGES[stage],
  isInterested && TECH_ATTR.isInterested.emoji,
  isWork && TECH_ATTR.isWork.emoji,
  isFresh && TECH_ATTR.isFresh.emoji,
]
  .filter(Boolean)
  .join("");

// We do this because emoji width is not constant across browsers
// const invisibleIcons = "ðŸ˜€".repeat(
//   3 - [isInterested, isWork, isFresh].filter(Boolean).length
// );
---

<div
  title={name}
  class="select-none rounded-md border bg-cc-night text-cc-white"
>
  <h3 class="sr-only">{name}</h3>
  <Sprite
    name={iconName}
    class="mx-3 mb-1 mt-2 aspect-square"
    style={{ color: iconColor }}
  />
  <div
    class="w-24 whitespace-nowrap p-1 text-center text-sm tracking-tighter sm:w-20 md:tracking-widest"
  >
    {icons}
    <!-- <span class="text-transparent">{invisibleIcons}</span> -->
  </div>
</div>
