---
import { IconButton } from "@components/common/button/IconButton";
import { Sprite } from "astro-iconify";
import type { HTMLAttributes } from "astro/types";

interface Props extends HTMLAttributes<"form"> {}

const { class: extraClass } = Astro.props;
const initialMessage =
  "You may introduce:\n\n1. Your *name*, and...\n2. Your *objective*, along with...\n3. Your *preferred platforms* for further conversations!";
---

<div class={extraClass} id="contact">
  <h2 class="connect-heading mb-8">
    <Sprite
      name="mdi:connection"
      class="mr-2 inline aspect-square w-12 pb-2"
    /><span class="connect-heading-text">Connect with me!</span>
  </h2>
  <form id="contact-form" method="POST" class="relative grid gap-y-8">
    <div
      class="form-cover absolute -inset-4 -z-10 rounded-3xl bg-white opacity-50"
    >
    </div>

    <label>
      <Sprite name="mdi:email-outline" class="inline aspect-square w-6 pb-1" />
      Your Email
      <input
        name="email"
        type="email"
        autocomplete="email"
        required
        maxlength="254"
        class="contact-form-field mt-2 sm:w-[30ch]"
      />
    </label>
    <label>
      <Sprite
        name="mdi:message-text-outline"
        class="inline aspect-square w-6"
      />
      Message
      <small class="inline italic">(max 3000 characters)</small>
      <textarea
        name="message"
        required
        class="mt-2 h-max"
        maxlength="3000"
        rows={5}>{initialMessage}</textarea
      >
    </label>
    <IconButton
      name="mdi:send"
      iconClass="h-6 aspect-square"
      hasContent
      position="right"
      class="contact-form-field max-w-fit"
      type="submit"
      hoverBorder
    >
      <span class="submit-btn-text">Send it off to me!</span>
    </IconButton>
    <small>
      This site is protected by reCAPTCHA, and the Google
      <a href="https://policies.google.com/privacy">Privacy Policy</a> and
      <a href="https://policies.google.com/terms">Terms of Service</a> apply.
    </small>
  </form>
</div>

<script>
  // @ts-nocheck

  // https://www.youtube.com/watch?v=TCJ-YrcLOTM
  // https://github.com/PipedreamHQ/nextjs-examples/blob/main/examples/contact-form/pages/components/ContactForm.js
  async function submit(event) {
    event.preventDefault();
    const submitBtn = document.querySelector("[type=submit]");
    submitBtn.disabled = true;

    submitBtn.classList.add("pointer-events-none");
    const submitBtnText = document.querySelector(".submit-btn-text");
    submitBtnText.innerText = "Sending message...";
    const formCover = document.querySelector(".form-cover");
    formCover.style.zIndex = "7";

    if (typeof grecaptcha === "undefined") {
      grecaptcha = {};
    }

    grecaptcha.ready = function (cb) {
      if (typeof grecaptcha === "undefined") {
        const c = "___grecaptcha_cfg";
        window[c] = window[c] || {};
        (window[c]["fns"] = window[c]["fns"] || []).push(cb);
      } else {
        cb();
      }
    };

    try {
      grecaptcha.ready(async function () {
        const token = await grecaptcha.execute(
          import.meta.env.PUBLIC_RECAPTCHA_SITE_KEY,
          { action: "submit" }
        );

        // Build form body
        const formData = new FormData(event.target);
        const requestBody = {
          email: formData.get("email"),
          message: formData.get("message"),
          token,
        };

        // Fetch
        await fetch(import.meta.env.PUBLIC_PIPEDREAM_URL, {
          method: "POST",
          body: JSON.stringify(requestBody),
        });
      });
      console.log("success!");
      submitBtnText.innerText = "Successfully sent!";

      const connectHeadingText = document.querySelector(
        ".connect-heading-text"
      );
      connectHeadingText.innerText = "We've connected!";
      const headingText = document.querySelector(".connect-heading");
      headingText.classList.add("animate-bounce");
    } catch (e) {
      console.error(e);
      submitBtn.disabled = false;
    }
  }
  const form = document.getElementById("contact-form");

  if (form) form.addEventListener("submit", submit, true);
</script>

<style is:global>
  .grecaptcha-badge {
    visibility: hidden;
  }
</style>
