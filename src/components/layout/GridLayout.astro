---
import type { HTMLAttributes } from "astro/types";

const gridLayoutCV = {
  xl: "grid-cols-[var(--layout-xl)]",
  lg: "grid-cols-[var(--layout-lg)]",
  md: "grid-cols-[var(--layout-md)]",
  prose: "grid-cols-[var(--layout-prose)]",
  none: null,
};

export type GridLayoutCVKeys = keyof typeof gridLayoutCV;

const gridClasses = "grid gap-x-4 gap-y-8 sm:gap-y-8 md:gap-y-16";

interface Props extends HTMLAttributes<"div"> {
  gridLayout?: GridLayoutCVKeys;
  isNestedGrid?: boolean;
  asMain?: boolean;
}

const {
  gridLayout = "xl",
  isNestedGrid = false,
  asMain = false,
  class: extraClass,
} = Astro.props;

const gridLayoutClassList = [
  gridLayoutCV[gridLayout],
  gridLayout !== "none" && gridClasses,
  isNestedGrid && "col-span-full",
  extraClass,
];
---

{
  asMain ? (
    <main class:list={gridLayoutClassList}>
      <slot />
    </main>
  ) : (
    <div class:list={gridLayoutClassList}>
      <slot />
    </div>
  )
}
